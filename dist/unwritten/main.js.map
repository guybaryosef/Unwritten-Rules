{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/add/add.component.css","webpack:///./src/app/components/add/add.component.html","webpack:///./src/app/components/add/add.component.ts","webpack:///./src/app/components/add/validators/tag-validator.directive.ts","webpack:///./src/app/components/index/index.component.css","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/rule.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".fill-remaining-space {\\n    /* This fills the remaining space in the toolbar. \\n       Every toolbar row uses a flexbox row layout. */\\n    flex: 1 1 auto;\\n  }\\n\\n.toolbar-title {\\n  font-size: 25px;\\n}\\n\\n.toolbar-button {\\n  display:inline-flex;\\n  height: 100%;\\n  align-items: center;\\n}\\n\\n.navbar {\\n  background-color: rgb(241, 158, 24);\\n}\"","module.exports = \"\\n<!-- The routing progress indicator -->\\n<ng2-slim-loading-bar color=\\\"blue\\\"></ng2-slim-loading-bar>\\n\\n<!-- The navigation bar at the top of all the pages -->\\n<nav class=\\\"navbar navbar-expand-lg navbar-light\\\">\\n  <a class=\\\"navbar-brand text-white\\\" routerLink=\\\"\\\" routerLinkActive=\\\"active\\\">{{ title }}</a>\\n\\n  <!-- search form-->\\n  <form class=\\\"form-inline my-2 my-lg-0 justify-content-start\\\">\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n    <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n  </form>\\n  \\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navbarNavAltMarkup\\\">\\n    <div class=\\\"navbar-nav \\\">\\n      <a class=\\\"nav-item nav-link text-white\\\" routerLink=\\\"add\\\" routerLinkActive=\\\"active\\\">Add a Rule</a>\\n      <a class=\\\"nav-item nav-link text-white\\\" >Log In</a>\\n      <a class=\\\"nav-item nav-link text-white\\\" routerLink=\\\"about\\\" routerLinkActive=\\\"active\\\">About</a>\\n    </div>\\n  </div>\\n</nav>\\n\\n<!-- The angular side routing -->\\n<div class=\\\"d-flex h-100 justify-content-center\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n// for the angular routing progress indicator\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\nimport {  NavigationCancel,\n          Event,\n          NavigationEnd,\n          NavigationError,\n          NavigationStart,\n          Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Unwritten Rules';\n\n  // in order to display the angular routing progress indicator\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AddComponent } from './components/add/add.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { AboutComponent } from './components/about/about.component';\n\n//UI with angular material\nimport {MatButtonModule, MatCheckboxModule, MatToolbarModule, MatInputModule} from '@angular/material';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule, ReactiveFormsModule }  from '@angular/forms';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n// angular progress bar indicator when loading new page\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\n\n// used to send http requests, if we end up needing it...\nimport { RuleService } from './rule.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n// angular routing\nimport {RouterModule, Routes} from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IndexComponent\n  },\n  {\n    path: 'add',\n    component: AddComponent\n  },\n  {\n    path: 'about',\n    component: AboutComponent\n  },\n  {\n    path: 'search/:id',\n    component: SearchComponent\n  }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddComponent,\n    SearchComponent,\n    IndexComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule,\n    FormsModule, \n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    SlimLoadingBarModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [\n    RuleService   // for the http requests to connect to mongodb (mlab)\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","module.exports = \".carousel {\\n    height: 500px;\\n    background-color: gray;\\n}\"","module.exports = \"\\n<!-- The 'about' carousel -->\\n<div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n  <ol class=\\\"carousel-indicators\\\">\\n    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"1\\\"></li>\\n    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"2\\\"></li>\\n  </ol>\\n  <div class=\\\"carousel-inner\\\">\\n    <div class=\\\"carousel-item\\\">\\n      Unwritten Rules is the place to discover the unwritten rules of society\\n    </div>\\n    <div class=\\\"carousel-item\\\">\\n      Find the norms of the where you live and the places you visit, avoiding insulting behavior\\n    </div>\\n    <div class=\\\"carousel-item\\\">\\n      Contribute to the community with your own knowledge and experiences!\\n    </div>\\n  </div>\\n\\n  <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n    <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n    <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-form-field {\\n    width:100%;\\n}\\n\\n\\n.ConfirmationMsg {\\n    min-height: 300px; \\n}\"","module.exports = \"\\n<!-- Add Rule component template -->\\n<div class=\\\"flex-column container-fluid\\\">\\n  <div>\\n    <h1>Add an Unwritten Rule below!</h1>\\n    <p>Do you have a custom, hint, curtosy, or general knowledge that you want to share?</p>\\n    <p>Add it below so that society can benefit from it!</p>\\n  </div>\\n\\n  <div class=\\\"overForm d-flex flex-column justify-content-center align-items-stretch\\\">\\n    <form [formGroup]=\\\"ruleForm\\\" *ngIf=\\\"!addedRule && !showSpinner\\\">\\n      <!-- Rule input area -->\\n      <mat-form-field class=\\\"form-group\\\" hintLabel=\\\"Max 100 characters\\\">\\n        <textarea matInput class=\\\"form-control\\\" formControlName=\\\"rule\\\" maxlength=\\\"100\\\" placeholder=\\\"Rule\\\" cols=\\\"20\\\" rows=\\\"5\\\"></textarea>\\n        <mat-hint align=\\\"end\\\">{{ruleForm.get('rule').value?.length || 0}}/100</mat-hint>  \\n        <mat-error *ngIf=\\\"ruleForm.get('rule').hasError('required') && (ruleForm.get('rule').dirty || ruleForm.get('rule').touched)\\\">\\n          You must enter the description of the rule\\n        </mat-error>\\n      </mat-form-field>\\n      \\n      <!-- Tag input area -->\\n      <mat-form-field class=\\\"form-group\\\">\\n        <input matInput class=\\\"form-control\\\" placeholder=\\\"Tag\\\" (keyup.enter)=\\\"addTag(ruleForm.get('tag').value)\\\" \\n                  formControlName=\\\"tag\\\" [matAutocomplete]=\\\"auto\\\" >\\n        \\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n          <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\"> {{ option }} </mat-option>\\n        </mat-autocomplete>\\n        \\n        <mat-error *ngIf=\\\"ruleForm.get('tag').invalid\\\"> {{ tagErrorMsg() }} </mat-error>\\n      </mat-form-field>\\n\\n      <ul class=\\\"list-group\\\">\\n        <li *ngFor=\\\"let tag1 of tags\\\" class=\\\"list-group-item\\\"> <span (click)=\\\"removeTag($index)\\\">&times; </span> {{tag1}} </li>\\n      </ul>\\n\\n      <!-- Enter form button -->\\n      <br>\\n      <button class=\\\"btn btn-outline-warning\\\" type=\\\"button\\\" (click)=\\\"addRule(ruleForm.get('rule').value)\\\" >Submit</button>\\n      <div *ngIf=\\\"errorSub\\\" class=\\\"text-danger\\\">>We are not able to add your rule right now, maybe try again later :(.</div>\\n    </form>\\n\\n    <div *ngIf=\\\"addedRule && !showSpinner\\\" class=\\\"ConfirmationMsg d-flex justify-content-center align-items-center\\\">Thank you for adding a rule!</div>\\n    <div *ngIf=\\\"showSpinner\\\"class=\\\"ConfirmationMsg d-flex justify-content-center align-items-center\\\">\\n      <mat-spinner></mat-spinner>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators, FormGroup} from '@angular/forms';\nimport { RuleService } from '../../rule.service';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {repeatingValidator, tooManyValidator} from './validators/tag-validator.directive';\nimport { BaseTreeControl } from '@angular/cdk/tree';\n\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  tags: string[] = [];\n  tagOptions: string[] = ['Tip', 'Etiquette', 'Dresscode', 'Polite', 'Acceptable Behavior'];\n  filteredOptions: Observable<string[]>;\n  errorSub: boolean;\n  showSpinner: boolean;\n  addedRule: boolean;\n\n  ruleForm = new FormGroup({\n    rule: new FormControl('', [\n      Validators.required\n    ]),\n    tag : new FormControl('', [\n      repeatingValidator(this.tags),\n      tooManyValidator(this.tags)\n    ])\n  });\n  \n  constructor(private ruleserviceVar: RuleService) {   \n    this.errorSub = false; \n    this.showSpinner = false;\n    this.addedRule = false;\n  }\n\n\n  // Add a tag to the list of tags\n  addTag(newTag: string) {      \n    if (!this.ruleForm.get('tag').invalid && newTag != '') {\n        this.tags.push(newTag);\n        this.ruleForm.get('tag').setValue('');\n    }\n  }\n\n\n  // The error message for the tag input\n  tagErrorMsg() {\n    if ( this.ruleForm.get('tag').hasError('tooMany') )\n      return 'You have entered the maximum amount of tags!';\n    else if ( this.ruleForm.get('tag').hasError('repeating') )\n      return 'You have already added this tag!';\n    else\n      return '';\n  }\n\n\n  // Removes a tag from the list of tags\n  removeTag(tag) {\n    this.tags.splice(tag,1);\n    this.ruleForm.get('tag').setValue('');\n  }\n\n\n  // Add the rule and its associated tags to the database\n  addRule(des) {\n    this.errorSub = false;\n    this.showSpinner = true;\n\n    this.ruleserviceVar.addRuleFunc(des, this.tags)\n      .subscribe( \n        rule =>  {\n          console.log('Succesfully added rule to database. Rule: ' + rule);\n          this.addedRule = true;\n          this.showSpinner = false;\n        },\n        error => {\n          console.error('Observer got an error: ' + error);\n          this.errorSub = true; // gives error that unable to submit rule to db\n          this.showSpinner = false;\n        }\n      );\n  }\n\n\n  ngOnInit() : void {\n\n    //initializes the tag's autocomplete funcitonality\n    this.filteredOptions = this.ruleForm.get('tag').valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  // function used for the autocomplete\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.tagOptions.filter(option => option.toLowerCase().includes(filterValue));\n  }\n}\n","//connects us to the control's value (current tag)\nimport {AbstractControl } from '@angular/forms';\n\n\nexport function repeatingValidator(arr: string[]) {\n    return (control: AbstractControl): {[key: string]: any} | null => {\n        return (arr.indexOf(control.value) > -1 ? {'repeating': {value: control.value}} : null );\n    }\n}\nexport function tooManyValidator(arr: string[]) {\n    return (control: AbstractControl): {[key: string]: any} | null => {\n        return (arr.length > 4 ? {'tooMany': {value: control.value}} : null );\n    }\n}","module.exports = \"\"","module.exports = \"<!-- The index component -->\\n<div class=\\\"flex-column\\\">\\n\\n    <h1>Welcome to Unwritten Rules!</h1>\\n    \\n    <div class=\\\"random\\\">\\n        <h5>{{randRule?.description}}</h5>\\n        <hr>\\n        <h6>Tags: </h6>\\n        <h6 *ngFor=\\\"let tag of randRule?.tags\\\">{{tag}}</h6>\\n\\n    </div>\\n    \\n\\n</div>\\n\\n\\n<!--\\n<table class=\\\"table\\\">\\n  <thead>\\n  <tr>\\n      <td>Rule Title</td>\\n      <td>Rule Description</td>\\n      <td colspan=\\\"2\\\">Actions</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr *ngFor=\\\"let rule of rules\\\">\\n          <td>{{ rule.category }}</td>\\n          <td>{{ rule.description }}</td>\\n          <td><a [routerLink]=\\\"['/edit', rule._id]\\\" class=\\\"button\\\">Edit</a></td>\\n          <td><a [routerLink]=\\\"\\\" class=\\\"button\\\">Delete</a></td>\\n      </tr>\\n  </tbody>\\n</table>\\n-->\"","import { Component, OnInit } from '@angular/core';\nimport {Rule} from './rule';\nimport { RuleService } from '../../rule.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  randRule: Rule;\n\n  constructor(private ruleserviceVar: RuleService) {}\n\n  ngOnInit() {\n\n    // Loads 'random' rule - first one in database\n    this.ruleserviceVar.getRandRule()\n      .subscribe( (data: Rule) => {\n        this.randRule = data;\n      })\n  \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  search works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n// for the http request\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Rule } from './components/index/rule';\n\n// allows us to use observables\nimport { Observable, throwError} from 'rxjs';\nimport { catchError, retry, map } from 'rxjs/operators';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RuleService {\n\n  uri = 'http://localhost:4000/db';\n\n  constructor(private http: HttpClient) { }\n\n\n\n  //function to add a rule to the database\n  addRuleFunc(descrip, ta) : Observable<Rule> {\n    const obj = {\n      description: descrip,\n      tags: ta\n    };\n    return this.http.post<Rule>(`${this.uri}/add`, obj)\n      .pipe(\n        retry(3),\n        catchError(this.handleError)\n      );\n  }\n\n  // function to get a rule from the database\n  getRule() {\n    return this.http.get(`${this.uri}/`) // the final \"/addRule\" is still unclear\n  }\n\n  // Function to get a random rule from the database\n  getRandRule() {\n    return this.http.get(`${this.uri}/rand`)\n  }\n\n  // error handles for adding a rule to the db\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// hammerJS is needed to enable gestures in angular material\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}